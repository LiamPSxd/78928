{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  salvarSaludo(saludador) {\n    this.http.post(\"https://db-tw-92bd2-default-rtdb.firebaseio.com/saludador.json\", saludador).subscribe(response => {\n      console.log(\"Respuesta del servidor \" + response);\n    }, error => console.log(\"Error del servidor \" + error));\n  }\n  mostrarSaludador() {\n    this.http.get;\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,YAAY,CAACC,SAAmB;IAC9B,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,gEAAgE,EAC/ED,SAAS,CAAC,CACTE,SAAS,CACRC,QAAQ,IAAG;MAAEC,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGF,QAAQ,CAAC;IAAA,CAAC,EAC/DG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGC,KAAK,CAAC,CACpD;EACH;EAEAC,gBAAgB;IACd,IAAI,CAACT,IAAI,CAACU,GAAG;EACf;;AAfWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["DataService","constructor","http","salvarSaludo","saludador","post","subscribe","response","console","log","error","mostrarSaludador","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\liami\\OneDrive\\Escritorio\\Semestre 6\\Tecnologías Web\\Actividades\\78928\\angular-01\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) {}\n\n  salvarSaludo(saludador: string[]){\n    this.http.post(\"https://db-tw-92bd2-default-rtdb.firebaseio.com/saludador.json\",\n    saludador)\n    .subscribe(\n      response => {console.log(\"Respuesta del servidor \" + response)},\n      error => console.log(\"Error del servidor \" + error)\n    );\n  }\n\n  mostrarSaludador(){\n    this.http.get\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}