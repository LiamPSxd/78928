{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  salvarSaludo(saludador) {\n    this.http.post(\"https://db-tw-92bd2-default-rtdb.firebaseio.com/saludador.json\", saludador).subscribe(response => {\n      console.log(\"Respuesta del servidor \" + response.name);\n    }, error => console.log(\"Error del servidor \" + error));\n  }\n  mostrarSaludador() {\n    this.http.get(\"https://db-tw-92bd2-default-rtdb.firebaseio.com/saludador.json\").pipe(map(responseData => {\n      const items = [];\n      for (const key in responseData) {\n        if (responseData.hasOwnProperty(key)) {\n          items.push({\n            id: key,\n            ...responseData[key]\n          });\n        }\n      }\n      return items;\n    })).subscribe(items => {\n      console.log(items);\n    });\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,YAAY,CAACC,SAAmB;IAC9B,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,gEAAgE,EAC/ED,SAAS,CAAC,CACTE,SAAS,CACRC,QAAQ,IAAG;MAAEC,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGF,QAAQ,CAACG,IAAI,CAAC;IAAA,CAAC,EACpEC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGE,KAAK,CAAC,CACpD;EACH;EAEAC,gBAAgB;IACd,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,gEAAgE,CAAC,CAACC,IAAI,CAClFf,GAAG,CAAEgB,YAAiB,IAAI;MACxB,MAAMC,KAAK,GAAG,EAAE;MAEhB,KAAI,MAAMC,GAAG,IAAIF,YAAY,EAAC;QAC5B,IAAGA,YAAY,CAACG,cAAc,CAACD,GAAG,CAAC,EAAC;UAClCD,KAAK,CAACG,IAAI,CAAC;YAACC,EAAE,EAAEH,GAAG;YAAE,GAAGF,YAAY,CAACE,GAAG;UAAC,CAAC,CAAC;;;MAI/C,OAAOD,KAAK;IACd,CAAC,CAAC,CACH,CAACV,SAAS,CAACU,KAAK,IAAG;MAAER,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IAAC,CAAC,CAAC;EAC7C;;AA3BWhB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["map","DataService","constructor","http","salvarSaludo","saludador","post","subscribe","response","console","log","name","error","mostrarSaludador","get","pipe","responseData","items","key","hasOwnProperty","push","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\liami\\OneDrive\\Escritorio\\Semestre 6\\Tecnologías Web\\Actividades\\78928\\angular-01\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) {}\n\n  salvarSaludo(saludador: string[]){\n    this.http.post(\"https://db-tw-92bd2-default-rtdb.firebaseio.com/saludador.json\",\n    saludador)\n    .subscribe(\n      response => {console.log(\"Respuesta del servidor \" + response.name)},\n      error => console.log(\"Error del servidor \" + error)\n    );\n  }\n\n  mostrarSaludador(){\n    this.http.get(\"https://db-tw-92bd2-default-rtdb.firebaseio.com/saludador.json\").pipe(\n      map((responseData: any) => {\n        const items = [];\n\n        for(const key in responseData){\n          if(responseData.hasOwnProperty(key)){\n            items.push({id: key, ...responseData[key]});\n          }\n        }\n\n        return items;\n      })\n    ).subscribe(items => {console.log(items);});\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}